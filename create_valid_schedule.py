#!/usr/bin/env python3
import requests
import json
from datetime import datetime, timedelta

# API URL
API_URL = "https://web-production-2678c.up.railway.app/api"

def create_valid_schedule():
    """–°–æ–∑–¥–∞–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏"""
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    schedule_data = {
        "title": "–§–∏–∑–∏–∫–∞ - –ú–µ—Ö–∞–Ω–∏–∫–∞",
        "description": "–û—Å–Ω–æ–≤—ã –º–µ—Ö–∞–Ω–∏–∫–∏ –¥–ª—è 10 –∫–ª–∞—Å—Å–∞",
        "subject": "–§–∏–∑–∏–∫–∞",
        "dayOfWeek": "monday",  # camelCase —Ñ–æ—Ä–º–∞—Ç
        "startTime": "09:00",   # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        "endTime": "10:30",     # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        "startDate": "2025-08-20",  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        "endDate": "2025-09-20",    # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
        "location": "–ö–∞–±–∏–Ω–µ—Ç 205",
        "maxStudents": 25,
        "teacherId": 1,
        "userId": 1,
        "type": "lecture",
        "difficulty": "intermediate",
        "duration": 90,
        "price": 0,
        "isRecurring": True,
        "isOnline": False,
        "requirements": "–£—á–µ–±–Ω–∏–∫ —Ñ–∏–∑–∏–∫–∏ 10 –∫–ª–∞—Å—Å"
    }
    
    try:
        print(f"üìÖ –°–æ–∑–¥–∞—é –≤–∞–ª–∏–¥–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {schedule_data['title']}")
        print(f"üîç –î–∞–Ω–Ω—ã–µ: {json.dumps(schedule_data, indent=2, ensure_ascii=False)}")
        
        response = requests.post(
            f"{API_URL}/schedules",
            json=schedule_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìã ID: {result.get('id')}")
            print(f"üìã –ù–∞–∑–≤–∞–Ω–∏–µ: {result.get('title')}")
            print(f"üìã –í—Ä–µ–º—è: {result.get('startTime')} - {result.get('endTime')}")
            print(f"üìã –î–∞—Ç—ã: {result.get('startDate')} –¥–æ {result.get('endDate')}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code}")
            print(f"üìã –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def get_all_schedules():
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    try:
        response = requests.get(f"{API_URL}/schedules/public")
        if response.status_code == 200:
            schedules = response.json()
            print(f"üìÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π: {len(schedules)}")
            for schedule in schedules:
                print(f"  - {schedule.get('title')} ({schedule.get('start_date')} - {schedule.get('end_date')})")
            return schedules
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π: {response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []

if __name__ == "__main__":
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    result = create_valid_schedule()
    
    if result:
        print("\n" + "=" * 50)
        print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:")
        get_all_schedules()
