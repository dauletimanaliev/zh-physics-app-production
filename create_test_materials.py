#!/usr/bin/env python3
import requests
import json

API_URL = "https://web-production-2678c.up.railway.app/api"

def create_material(material_data):
    """Create a new material via API"""
    try:
        response = requests.post(f"{API_URL}/materials", json=material_data)
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Created material: {material_data['title']} (ID: {result.get('id', 'unknown')})")
            return result
        else:
            print(f"‚ùå Failed to create material: {material_data['title']}")
            print(f"Status: {response.status_code}, Response: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå Error creating material: {e}")
        return None

def main():
    """Create test materials"""
    print("üöÄ Creating test materials...")
    
    materials = [
        {
            "title": "–ú–µ—Ö–∞–Ω–∏–∫–∞: –û—Å–Ω–æ–≤—ã –∫–∏–Ω–µ–º–∞—Ç–∏–∫–∏",
            "description": "–ò–∑—É—á–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ç–µ–ª –±–µ–∑ —É—á–µ—Ç–∞ –ø—Ä–∏—á–∏–Ω, –≤—ã–∑—ã–≤–∞—é—â–∏—Ö —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ",
            "subject": "–§–∏–∑–∏–∫–∞",
            "grade": "10",
            "teacher": "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
            "tags": ["–º–µ—Ö–∞–Ω–∏–∫–∞", "–∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞", "–¥–≤–∏–∂–µ–Ω–∏–µ"],
            "attachments": [],
            "isPublished": 1
        },
        {
            "title": "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ –∏ –º–∞–≥–Ω–µ—Ç–∏–∑–º",
            "description": "–û—Å–Ω–æ–≤—ã —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏–∫–∏ –∏ —ç–ª–µ–∫—Ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∏",
            "subject": "–§–∏–∑–∏–∫–∞", 
            "grade": "11",
            "teacher": "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
            "tags": ["—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", "–º–∞–≥–Ω–µ—Ç–∏–∑–º", "–∑–∞—Ä—è–¥"],
            "attachments": [],
            "isPublished": 1
        },
        {
            "title": "–û–ø—Ç–∏–∫–∞: –ó–∞–∫–æ–Ω—ã –æ—Ç—Ä–∞–∂–µ–Ω–∏—è –∏ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è",
            "description": "–ò–∑—É—á–µ–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å–≤–µ—Ç–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å—Ä–µ–¥–∞–º–∏",
            "subject": "–§–∏–∑–∏–∫–∞",
            "grade": "11", 
            "teacher": "–°–∏–¥–æ—Ä–æ–≤ –°.–°.",
            "tags": ["–æ–ø—Ç–∏–∫–∞", "—Å–≤–µ—Ç", "–æ—Ç—Ä–∞–∂–µ–Ω–∏–µ", "–ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ"],
            "attachments": [],
            "isPublished": 1
        }
    ]
    
    created_materials = []
    for material in materials:
        result = create_material(material)
        if result:
            created_materials.append(result)
    
    print(f"\n‚úÖ Successfully created {len(created_materials)} materials")
    
    # Verify materials were created
    print("\nüìã Checking created materials...")
    try:
        response = requests.get(f"{API_URL}/materials")
        if response.status_code == 200:
            materials = response.json()
            if isinstance(materials, list):
                print(f"Total materials in database: {len(materials)}")
                for material in materials:
                    print(f"  - ID: {material['id']}, Title: {material['title']}")
            else:
                materials = materials.get('materials', [])
                print(f"Total materials in database: {len(materials)}")
                for material in materials:
                    print(f"  - ID: {material['id']}, Title: {material['title']}")
        else:
            print(f"‚ùå Failed to fetch materials: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error fetching materials: {e}")

if __name__ == "__main__":
    main()
