import React, { useState } from 'react';
import './Schedule.css';

const Schedule = () => {
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [viewMode, setViewMode] = useState('week'); // 'week', 'month', 'day'

  const events = [
    {
      id: 1,
      title: '–§–∏–∑–∏–∫–∞ –¥”ô—Ä—ñ—Å—ñ',
      subject: '–§–∏–∑–∏–∫–∞',
      type: 'lesson',
      startTime: '09:00',
      endTime: '10:30',
      date: '2024-01-15',
      teacher: '–ù“±—Ä–ª–∞–Ω –ú“±—Ä–∞—Ç“±–ª—ã',
      location: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 101',
      color: '#667eea'
    },
    {
      id: 2,
      title: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —Ç–µ—Å—Ç—ñ',
      subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
      type: 'test',
      startTime: '11:00',
      endTime: '12:00',
      date: '2024-01-15',
      teacher: '–ê–π–≥“Ø–ª –°–µ—Ä—ñ–∫“õ—ã–∑—ã',
      location: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 205',
      color: '#f093fb'
    },
    {
      id: 3,
      title: '–•–∏–º–∏—è –∑–µ—Ä—Ç—Ö–∞–Ω–∞—Å—ã',
      subject: '–•–∏–º–∏—è',
      type: 'lab',
      startTime: '14:00',
      endTime: '15:30',
      date: '2024-01-15',
      teacher: '–ë–æ–ª–∞—Ç “ö–∞—Å—ã–º“±–ª—ã',
      location: '–ó–µ—Ä—Ç—Ö–∞–Ω–∞ 3',
      color: '#4ecdc4'
    },
    {
      id: 4,
      title: '–ë–∏–æ–ª–æ–≥–∏—è —Å–µ–º–∏–Ω–∞—Ä—ã',
      subject: '–ë–∏–æ–ª–æ–≥–∏—è',
      type: 'seminar',
      startTime: '10:00',
      endTime: '11:30',
      date: '2024-01-16',
      teacher: '–ì“Ø–ª–Ω–∞—Ä ”ò–±–¥—ñ“õ—ã–∑—ã',
      location: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 302',
      color: '#45b7d1'
    },
    {
      id: 5,
      title: '–§–∏–∑–∏–∫–∞ —Ç–µ—Å—Ç—ñ',
      subject: '–§–∏–∑–∏–∫–∞',
      type: 'test',
      startTime: '15:00',
      endTime: '16:00',
      date: '2024-01-17',
      teacher: '–ù“±—Ä–ª–∞–Ω –ú“±—Ä–∞—Ç“±–ª—ã',
      location: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 101',
      color: '#667eea'
    }
  ];

  const upcomingEvents = events
    .filter(event => new Date(event.date) >= new Date())
    .sort((a, b) => new Date(a.date + ' ' + a.startTime) - new Date(b.date + ' ' + b.startTime))
    .slice(0, 5);

  const todayEvents = events.filter(event => {
    const today = new Date().toISOString().split('T')[0];
    return event.date === today;
  });

  const getEventTypeIcon = (type) => {
    switch (type) {
      case 'lesson': return 'üìö';
      case 'test': return 'üìù';
      case 'lab': return 'üß™';
      case 'seminar': return 'üí¨';
      default: return 'üìÖ';
    }
  };

  const getEventTypeName = (type) => {
    switch (type) {
      case 'lesson': return '–î”ô—Ä—ñ—Å';
      case 'test': return '–¢–µ—Å—Ç';
      case 'lab': return '–ó–µ—Ä—Ç—Ö–∞–Ω–∞';
      case 'seminar': return '–°–µ–º–∏–Ω–∞—Ä';
      default: return '–û“õ–∏“ì–∞';
    }
  };

  return (
    <div className="schedule-container">
      <div className="schedule-header">
        <h1>–°–∞–±–∞“õ—Ç–∞—Ä –∫–µ—Å—Ç–µ—Å—ñ</h1>
        <p>–°–∞–±–∞“õ—Ç–∞—Ä –∫–µ—Å—Ç–µ—Å—ñ –∂”ô–Ω–µ –æ“õ—É –∂–æ—Å–ø–∞—Ä—ã</p>
      </div>

      {/* View Mode Selector */}
      <div className="view-selector">
        <button 
          className={`view-btn ${viewMode === 'day' ? 'active' : ''}`}
          onClick={() => setViewMode('day')}
        >
          –ö“Ø–Ω
        </button>
        <button 
          className={`view-btn ${viewMode === 'week' ? 'active' : ''}`}
          onClick={() => setViewMode('week')}
        >
          –ê–ø—Ç–∞
        </button>
        <button 
          className={`view-btn ${viewMode === 'month' ? 'active' : ''}`}
          onClick={() => setViewMode('month')}
        >
          –ê–π
        </button>
      </div>

      {/* Today's Events */}
      <div className="today-section">
        <h2>–ë“Ø–≥—ñ–Ω–≥—ñ —Å–∞–±–∞“õ—Ç–∞—Ä</h2>
        {todayEvents.length > 0 ? (
          <div className="today-events">
            {todayEvents.map(event => (
              <div key={event.id} className="today-event" style={{ borderLeftColor: event.color }}>
                <div className="event-time">
                  <span className="time">{event.startTime}</span>
                  <span className="duration">
                    {Math.round((new Date(`1970-01-01 ${event.endTime}`) - new Date(`1970-01-01 ${event.startTime}`)) / 60000)} –º–∏–Ω
                  </span>
                </div>
                <div className="event-details">
                  <div className="event-header">
                    <span className="event-icon">{getEventTypeIcon(event.type)}</span>
                    <h3>{event.title}</h3>
                    <span className="event-type">{getEventTypeName(event.type)}</span>
                  </div>
                  <div className="event-info">
                    <span className="teacher">üë®‚Äçüè´ {event.teacher}</span>
                    <span className="location">üìç {event.location}</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="no-events">
            <div className="no-events-icon">üìÖ</div>
            <p>–ë“Ø–≥—ñ–Ω —Å–∞–±–∞“õ—Ç–∞—Ä –∂–æ“õ</p>
          </div>
        )}
      </div>

      {/* Upcoming Events */}
      <div className="upcoming-section">
        <h2>–ê–ª–¥–∞“ì—ã —Å–∞–±–∞“õ—Ç–∞—Ä</h2>
        <div className="upcoming-events">
          {upcomingEvents.map(event => (
            <div key={event.id} className="upcoming-event">
              <div className="event-date">
                <div className="date-day">{new Date(event.date).getDate()}</div>
                <div className="date-month">
                  {new Date(event.date).toLocaleDateString('kk-KZ', { month: 'short' })}
                </div>
              </div>
              <div className="event-content">
                <div className="event-header">
                  <span className="event-icon">{getEventTypeIcon(event.type)}</span>
                  <h3>{event.title}</h3>
                </div>
                <div className="event-meta">
                  <span className="time">‚è∞ {event.startTime} - {event.endTime}</span>
                  <span className="subject" style={{ color: event.color }}>
                    {event.subject}
                  </span>
                </div>
                <div className="event-location">
                  <span>üìç {event.location}</span>
                  <span>üë®‚Äçüè´ {event.teacher}</span>
                </div>
              </div>
              <div className="event-actions">
                <button className="remind-btn">üîî</button>
                <button className="details-btn">‚ÑπÔ∏è</button>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Quick Stats */}
      <div className="schedule-stats">
        <div className="stat-card">
          <div className="stat-icon">üìö</div>
          <div className="stat-info">
            <h3>–ë“Ø–≥—ñ–Ω</h3>
            <p>{todayEvents.length} —Å–∞–±–∞“õ</p>
          </div>
        </div>
        <div className="stat-card">
          <div className="stat-icon">üìÖ</div>
          <div className="stat-info">
            <h3>–û—Å—ã –∞–ø—Ç–∞–¥–∞</h3>
            <p>{events.length} —Å–∞–±–∞“õ</p>
          </div>
        </div>
        <div className="stat-card">
          <div className="stat-icon">‚è∞</div>
          <div className="stat-info">
            <h3>–ö–µ–ª–µ—Å—ñ —Å–∞–±–∞“õ</h3>
            <p>{upcomingEvents.length > 0 ? upcomingEvents[0].startTime : '–ñ–æ“õ'}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Schedule;
