import React, { useState, useEffect } from 'react';
import './Schedule.css';

const Schedule = () => {
  const [schedule, setSchedule] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedDay, setSelectedDay] = useState(0);

  const daysOfWeek = [
    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    '–í—Ç–æ—Ä–Ω–∏–∫', 
    '–°—Ä–µ–¥–∞',
    '–ß–µ—Ç–≤–µ—Ä–≥',
    '–ü—è—Ç–Ω–∏—Ü–∞',
    '–°—É–±–±–æ—Ç–∞',
    '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
  ];

  useEffect(() => {
    fetchSchedule();
    setSelectedDay(getCurrentDay());
  }, []);

  const fetchSchedule = async () => {
    try {
      const response = await new Promise((resolve) =>
        setTimeout(() =>
          resolve({
            data: [
              {
                id: 1,
                day_of_week: 0,
                time_start: '09:00',
                time_end: '10:30',
                subject: '–§–∏–∑–∏–∫–∞',
                topic: '–ú–µ—Ö–∞–Ω–∏–∫–∞',
                teacher: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
                classroom: '–ö–∞–±. 101'
              },
              {
                id: 2,
                day_of_week: 0,
                time_start: '10:45',
                time_end: '12:15',
                subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
                topic: '–ê–ª–≥–µ–±—Ä–∞',
                teacher: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
                classroom: '–ö–∞–±. 205'
              }
            ],
          }),
        1000
        )
      );
      setSchedule(response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error);
    } finally {
      setLoading(false);
    }
  };

  const getCurrentDay = () => {
    const today = new Date().getDay();
    return today === 0 ? 6 : today - 1;
  };

  const getScheduleForDay = (dayIndex) => {
    return schedule.filter(item => item.day_of_week === dayIndex);
  };

  return (
    <div className="schedule-page">
      <div className="schedule-header">
        <h1>üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</h1>
        <p>–ü–ª–∞–Ω —É—Ä–æ–∫–æ–≤ –Ω–∞ –Ω–µ–¥–µ–ª—é</p>
      </div>

      <div className="day-selector">
        {daysOfWeek.map((day, index) => (
          <button
            key={index}
            className={`day-button ${selectedDay === index ? 'active' : ''}`}
            onClick={() => setSelectedDay(index)}
          >
            {day.substring(0, 3)}
          </button>
        ))}
      </div>

      <div className="schedule-content">
        {loading ? (
          <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...</div>
        ) : (
          <div className="schedule-day">
            <h2>{daysOfWeek[selectedDay]}</h2>
            
            {getScheduleForDay(selectedDay).length === 0 ? (
              <div className="no-classes">
                <h3>–°–≤–æ–±–æ–¥–Ω—ã–π –¥–µ–Ω—å! üéâ</h3>
                <p>–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –∑–∞–Ω—è—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</p>
              </div>
            ) : (
              <div className="classes-list">
                {getScheduleForDay(selectedDay).map((classItem) => (
                  <div key={classItem.id} className="class-card">
                    <div className="class-time">
                      {classItem.time_start} - {classItem.time_end}
                    </div>
                    <div className="class-details">
                      <div className="class-subject">{classItem.subject}</div>
                      <div className="class-topic">{classItem.topic}</div>
                      <div className="class-teacher">üë®‚Äçüè´ {classItem.teacher}</div>
                      <div className="class-room">üìç {classItem.classroom}</div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default Schedule;
